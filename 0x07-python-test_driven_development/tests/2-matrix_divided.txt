============================
The 2-matrix_divided module
============================

Using the ``matrix_divided`` function
-------------------------------------

passing cases
-------------

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix = [[1, 2, 3], [4, 5, 6]]

>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]


>>> matrix = [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix_divided(matrix, 3)
[[0.11, 0.22, 0.33], [0.44, 0.56, 0.67]]


>>> matrix = [[-4, 0.67, -3.0], [1.33, 5, -6]]

>>> matrix_divided(matrix, 3)
[[-1.33, 0.22, -1.0], [0.44, 1.67, -2.0]]

>>> matrix = [[1, 2, 3], [4, 5, 6]]

>>> matrix_divided(matrix)
[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

>>> matrix_divided()


Exceptions
----------

>>> matrix = [(-4, 0.67, -3.0), [1.33, 5, -6]]

>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> matrix = [[1, 2, 3], (4, 5, 6)]

>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = (["1", 2, 3], ['4', 5, 6])

>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> matrix = ([1, 2, 3], [4, 5, 6])

>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> matrix = [[1, 2, 3], (4, 5, 6)]

>>> matrix_divided(matrix, '3')
Traceback (most recent call last):
TypeError: div must be a number


>>> matrix = [[1, 2, 3], [4, 5, 6, 7, 8]]

>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size


>>> matrix = [[1, 2, 3], [4, 5, 6]]

>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero
